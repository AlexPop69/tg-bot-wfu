package telegram

// UpdateResponse представляет собой ответ от Telegram API на запрос getUpdates.
// Это корневая структура, содержащая массив обновлений (Update).
type UpdateResponse struct {
	OK     bool     `json:"ok"`     // Поле OK показывает, успешен ли запрос (true/false)
	Result []Update `json:"result"` // Массив обновлений, полученных от Telegram API
}

// Update представляет собой единичное обновление (сообщение, команда и т.д.).
// Telegram отправляет обновления боту каждый раз, когда пользователь взаимодействует с ботом.
type Update struct {
	UpdateID int      `json:"update_id"` // Уникальный идентификатор обновления
	Message  *Message `json:"message"`   // Сообщение, связанное с этим обновлением (может быть nil, если это не сообщение)
}

// Message представляет собой сообщение, отправленное пользователем в чат.
// Оно может содержать текст, фото или другие типы данных.
type Message struct {
	MessageID int     `json:"message_id"` // Уникальный идентификатор сообщения
	From      *User   `json:"from"`       // Пользователь, отправивший сообщение
	Chat      *Chat   `json:"chat"`       // Чат, в который было отправлено сообщение
	Date      int     `json:"date"`       // Дата отправки сообщения (в формате Unix timestamp)
	Text      string  `json:"text"`       // Текст сообщения (если присутствует)
	Photo     []Photo `json:"photo"`      // Массив фото (если сообщение содержит фото)
}

// User представляет собой пользователя Telegram, который взаимодействует с ботом.
type User struct {
	ID       int    `json:"id"`       // Уникальный идентификатор пользователя
	Username string `json:"username"` // Имя пользователя в Telegram (username)
}

// Chat представляет собой чат, в который было отправлено сообщение.
// Это может быть личный чат с пользователем, групповая беседа или канал.
type Chat struct {
	ID int64 `json:"id"` // Уникальный идентификатор чата
}

// Photo представляет собой фото, отправленное пользователем в чат.
// Сообщение может содержать несколько фотографий с разными размерами.
type Photo struct {
	FileID string `json:"file_id"` // Идентификатор файла фото, используемый для загрузки фото через API Telegram
}
